// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.battlelancer.seriesguide.util;

import com.uwetrottmann.trakt5.TraktV2;
import com.uwetrottmann.trakt5.services.Checkin;
import com.uwetrottmann.trakt5.services.Comments;
import dagger.MembersInjector;
import dagger.internal.DoubleCheck;
import javax.inject.Provider;

public final class TraktTask_MembersInjector implements MembersInjector<TraktTask> {
  private final Provider<TraktV2> traktProvider;

  private final Provider<Checkin> traktCheckinProvider;

  private final Provider<Comments> traktCommentsProvider;

  public TraktTask_MembersInjector(
      Provider<TraktV2> traktProvider,
      Provider<Checkin> traktCheckinProvider,
      Provider<Comments> traktCommentsProvider) {
    assert traktProvider != null;
    this.traktProvider = traktProvider;
    assert traktCheckinProvider != null;
    this.traktCheckinProvider = traktCheckinProvider;
    assert traktCommentsProvider != null;
    this.traktCommentsProvider = traktCommentsProvider;
  }

  public static MembersInjector<TraktTask> create(
      Provider<TraktV2> traktProvider,
      Provider<Checkin> traktCheckinProvider,
      Provider<Comments> traktCommentsProvider) {
    return new TraktTask_MembersInjector(
        traktProvider, traktCheckinProvider, traktCommentsProvider);
  }

  @Override
  public void injectMembers(TraktTask instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.trakt = DoubleCheck.lazy(traktProvider);
    instance.traktCheckin = DoubleCheck.lazy(traktCheckinProvider);
    instance.traktComments = DoubleCheck.lazy(traktCommentsProvider);
  }

  public static void injectTrakt(TraktTask instance, Provider<TraktV2> traktProvider) {
    instance.trakt = DoubleCheck.lazy(traktProvider);
  }

  public static void injectTraktCheckin(
      TraktTask instance, Provider<Checkin> traktCheckinProvider) {
    instance.traktCheckin = DoubleCheck.lazy(traktCheckinProvider);
  }

  public static void injectTraktComments(
      TraktTask instance, Provider<Comments> traktCommentsProvider) {
    instance.traktComments = DoubleCheck.lazy(traktCommentsProvider);
  }
}
