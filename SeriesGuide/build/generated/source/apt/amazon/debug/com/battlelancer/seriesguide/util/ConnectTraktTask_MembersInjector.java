// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.battlelancer.seriesguide.util;

import com.uwetrottmann.trakt5.TraktV2;
import com.uwetrottmann.trakt5.services.Users;
import dagger.MembersInjector;
import dagger.internal.DoubleCheck;
import javax.inject.Provider;

public final class ConnectTraktTask_MembersInjector implements MembersInjector<ConnectTraktTask> {
  private final Provider<TraktV2> traktProvider;

  private final Provider<Users> traktUsersProvider;

  public ConnectTraktTask_MembersInjector(
      Provider<TraktV2> traktProvider, Provider<Users> traktUsersProvider) {
    assert traktProvider != null;
    this.traktProvider = traktProvider;
    assert traktUsersProvider != null;
    this.traktUsersProvider = traktUsersProvider;
  }

  public static MembersInjector<ConnectTraktTask> create(
      Provider<TraktV2> traktProvider, Provider<Users> traktUsersProvider) {
    return new ConnectTraktTask_MembersInjector(traktProvider, traktUsersProvider);
  }

  @Override
  public void injectMembers(ConnectTraktTask instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.trakt = traktProvider.get();
    instance.traktUsers = DoubleCheck.lazy(traktUsersProvider);
  }

  public static void injectTrakt(ConnectTraktTask instance, Provider<TraktV2> traktProvider) {
    instance.trakt = traktProvider.get();
  }

  public static void injectTraktUsers(
      ConnectTraktTask instance, Provider<Users> traktUsersProvider) {
    instance.traktUsers = DoubleCheck.lazy(traktUsersProvider);
  }
}
