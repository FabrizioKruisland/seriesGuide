// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.battlelancer.seriesguide.thetvdbapi;

import com.uwetrottmann.thetvdb.services.TheTvdbSearch;
import com.uwetrottmann.thetvdb.services.TheTvdbSeries;
import com.uwetrottmann.trakt5.services.Search;
import com.uwetrottmann.trakt5.services.Shows;
import dagger.MembersInjector;
import dagger.internal.DoubleCheck;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

public final class TvdbTools_MembersInjector implements MembersInjector<TvdbTools> {
  private final Provider<TheTvdbSearch> tvdbSearchProvider;

  private final Provider<TheTvdbSeries> tvdbSeriesProvider;

  private final Provider<Search> traktSearchProvider;

  private final Provider<Shows> traktShowsProvider;

  private final Provider<OkHttpClient> okHttpClientProvider;

  public TvdbTools_MembersInjector(
      Provider<TheTvdbSearch> tvdbSearchProvider,
      Provider<TheTvdbSeries> tvdbSeriesProvider,
      Provider<Search> traktSearchProvider,
      Provider<Shows> traktShowsProvider,
      Provider<OkHttpClient> okHttpClientProvider) {
    assert tvdbSearchProvider != null;
    this.tvdbSearchProvider = tvdbSearchProvider;
    assert tvdbSeriesProvider != null;
    this.tvdbSeriesProvider = tvdbSeriesProvider;
    assert traktSearchProvider != null;
    this.traktSearchProvider = traktSearchProvider;
    assert traktShowsProvider != null;
    this.traktShowsProvider = traktShowsProvider;
    assert okHttpClientProvider != null;
    this.okHttpClientProvider = okHttpClientProvider;
  }

  public static MembersInjector<TvdbTools> create(
      Provider<TheTvdbSearch> tvdbSearchProvider,
      Provider<TheTvdbSeries> tvdbSeriesProvider,
      Provider<Search> traktSearchProvider,
      Provider<Shows> traktShowsProvider,
      Provider<OkHttpClient> okHttpClientProvider) {
    return new TvdbTools_MembersInjector(
        tvdbSearchProvider,
        tvdbSeriesProvider,
        traktSearchProvider,
        traktShowsProvider,
        okHttpClientProvider);
  }

  @Override
  public void injectMembers(TvdbTools instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.tvdbSearch = DoubleCheck.lazy(tvdbSearchProvider);
    instance.tvdbSeries = DoubleCheck.lazy(tvdbSeriesProvider);
    instance.traktSearch = DoubleCheck.lazy(traktSearchProvider);
    instance.traktShows = DoubleCheck.lazy(traktShowsProvider);
    instance.okHttpClient = DoubleCheck.lazy(okHttpClientProvider);
  }

  public static void injectTvdbSearch(
      TvdbTools instance, Provider<TheTvdbSearch> tvdbSearchProvider) {
    instance.tvdbSearch = DoubleCheck.lazy(tvdbSearchProvider);
  }

  public static void injectTvdbSeries(
      TvdbTools instance, Provider<TheTvdbSeries> tvdbSeriesProvider) {
    instance.tvdbSeries = DoubleCheck.lazy(tvdbSeriesProvider);
  }

  public static void injectTraktSearch(TvdbTools instance, Provider<Search> traktSearchProvider) {
    instance.traktSearch = DoubleCheck.lazy(traktSearchProvider);
  }

  public static void injectTraktShows(TvdbTools instance, Provider<Shows> traktShowsProvider) {
    instance.traktShows = DoubleCheck.lazy(traktShowsProvider);
  }

  public static void injectOkHttpClient(
      TvdbTools instance, Provider<OkHttpClient> okHttpClientProvider) {
    instance.okHttpClient = DoubleCheck.lazy(okHttpClientProvider);
  }
}
