// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.battlelancer.seriesguide.modules;

import com.uwetrottmann.trakt5.TraktV2;
import com.uwetrottmann.trakt5.services.Shows;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class TraktModule_ProvideShowsFactory implements Factory<Shows> {
  private final TraktModule module;

  private final Provider<TraktV2> traktProvider;

  public TraktModule_ProvideShowsFactory(TraktModule module, Provider<TraktV2> traktProvider) {
    assert module != null;
    this.module = module;
    assert traktProvider != null;
    this.traktProvider = traktProvider;
  }

  @Override
  public Shows get() {
    return Preconditions.checkNotNull(
        module.provideShows(traktProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Shows> create(TraktModule module, Provider<TraktV2> traktProvider) {
    return new TraktModule_ProvideShowsFactory(module, traktProvider);
  }

  /** Proxies {@link TraktModule#provideShows(TraktV2)}. */
  public static Shows proxyProvideShows(TraktModule instance, TraktV2 trakt) {
    return instance.provideShows(trakt);
  }
}
