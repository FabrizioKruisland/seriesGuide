// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.battlelancer.seriesguide.modules;

import android.app.Application;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.Cache;

public final class HttpClientModule_ProvideOkHttpCacheFactory implements Factory<Cache> {
  private final HttpClientModule module;

  private final Provider<Application> applicationProvider;

  public HttpClientModule_ProvideOkHttpCacheFactory(
      HttpClientModule module, Provider<Application> applicationProvider) {
    assert module != null;
    this.module = module;
    assert applicationProvider != null;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public Cache get() {
    return Preconditions.checkNotNull(
        module.provideOkHttpCache(applicationProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Cache> create(
      HttpClientModule module, Provider<Application> applicationProvider) {
    return new HttpClientModule_ProvideOkHttpCacheFactory(module, applicationProvider);
  }

  /** Proxies {@link HttpClientModule#provideOkHttpCache(Application)}. */
  public static Cache proxyProvideOkHttpCache(HttpClientModule instance, Application application) {
    return instance.provideOkHttpCache(application);
  }
}
