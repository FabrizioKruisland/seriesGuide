// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.battlelancer.seriesguide.loaders;

import com.uwetrottmann.trakt5.services.Recommendations;
import com.uwetrottmann.trakt5.services.Sync;
import dagger.MembersInjector;
import dagger.internal.DoubleCheck;
import javax.inject.Provider;

public final class TraktAddLoader_MembersInjector implements MembersInjector<TraktAddLoader> {
  private final Provider<Recommendations> traktRecommendationsProvider;

  private final Provider<Sync> traktSyncProvider;

  public TraktAddLoader_MembersInjector(
      Provider<Recommendations> traktRecommendationsProvider, Provider<Sync> traktSyncProvider) {
    assert traktRecommendationsProvider != null;
    this.traktRecommendationsProvider = traktRecommendationsProvider;
    assert traktSyncProvider != null;
    this.traktSyncProvider = traktSyncProvider;
  }

  public static MembersInjector<TraktAddLoader> create(
      Provider<Recommendations> traktRecommendationsProvider, Provider<Sync> traktSyncProvider) {
    return new TraktAddLoader_MembersInjector(traktRecommendationsProvider, traktSyncProvider);
  }

  @Override
  public void injectMembers(TraktAddLoader instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.traktRecommendations = DoubleCheck.lazy(traktRecommendationsProvider);
    instance.traktSync = DoubleCheck.lazy(traktSyncProvider);
  }

  public static void injectTraktRecommendations(
      TraktAddLoader instance, Provider<Recommendations> traktRecommendationsProvider) {
    instance.traktRecommendations = DoubleCheck.lazy(traktRecommendationsProvider);
  }

  public static void injectTraktSync(TraktAddLoader instance, Provider<Sync> traktSyncProvider) {
    instance.traktSync = DoubleCheck.lazy(traktSyncProvider);
  }
}
