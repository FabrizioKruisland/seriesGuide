// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.battlelancer.seriesguide.sync;

import com.uwetrottmann.tmdb2.services.ConfigurationService;
import dagger.MembersInjector;
import dagger.internal.DoubleCheck;
import javax.inject.Provider;

public final class SgSyncAdapter_MembersInjector implements MembersInjector<SgSyncAdapter> {
  private final Provider<ConfigurationService> tmdbConfigServiceProvider;

  public SgSyncAdapter_MembersInjector(Provider<ConfigurationService> tmdbConfigServiceProvider) {
    assert tmdbConfigServiceProvider != null;
    this.tmdbConfigServiceProvider = tmdbConfigServiceProvider;
  }

  public static MembersInjector<SgSyncAdapter> create(
      Provider<ConfigurationService> tmdbConfigServiceProvider) {
    return new SgSyncAdapter_MembersInjector(tmdbConfigServiceProvider);
  }

  @Override
  public void injectMembers(SgSyncAdapter instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.tmdbConfigService = DoubleCheck.lazy(tmdbConfigServiceProvider);
  }

  public static void injectTmdbConfigService(
      SgSyncAdapter instance, Provider<ConfigurationService> tmdbConfigServiceProvider) {
    instance.tmdbConfigService = DoubleCheck.lazy(tmdbConfigServiceProvider);
  }
}
